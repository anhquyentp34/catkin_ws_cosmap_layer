<launch>
  <!-- Use this launch file for navigation simulation -->
  <!--This launches gazebo itself. Don't launch gazebo explicitly before this  -->
  <!-- Arguments -->
  <!--arg name="model" default="$(env DIFFBOT_MODEL)" doc="model type [diffbot, remo]"/-->
  <arg name="model" default="diffbot" doc="model type [diffbot, remo]"/>

  <arg name="map_file" default="$(find diffbot_navigation)/maps/cafe.yaml"/>
  <arg name="open_rviz" default="true"/>
  <arg name="rvizconfig" default="$(find diffbot_navigation)/rviz/diffbot_navigation.rviz" />
  <arg name="move_forward_only" default="false"/>
  <arg name="local_planner" default="teb" doc="Local planner can be either dwa, base, teb or pose"/>
  <arg name="world_name" default="$(find diffbot_gazebo)/worlds/cafe.world"/>

  <!-- DiffBot Remote Steering TODO -->
  <!--include file="$(find diffbot_bringup)/launch/diffbot_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include-->
    <!--arg name="model" default="$(env DIFFBOT_MODEL)" doc="model type [diffbot, remo]"/-->
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <!--arg name="model" default="$(env DIFFBOT_MODEL)" doc="model type [diffbot, remo]"/-->
    
  <arg name="description_package" default="$(eval find(arg('model') + '_description'))" />
  <arg name="urdf_file" default="$(find xacro)/xacro '$(arg description_package)/urdf/$(arg model).urdf.xacro'" />
 
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="1.25"/>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="diffbot/robot_description" command="$(arg urdf_file)"/>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-urdf -model diffbot -param /diffbot/robot_description -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) "/>
        
    
  <!-- Load controller configurations from YAML file to parameter server -->
  <rosparam command="load" file="$(find diffbot_control)/config/diffbot_control.yaml"/>

  <rosparam command="load" file="$(find diffbot_control)/config/pid.yaml"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="diffbot" args="joint_state_controller
                                            mobile_base_controller"/>


    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        ns="diffbot" respawn="false" output="screen">
        <remap from="/joint_states" to="/diffbot/joint_states" />
        <!-- param name="publish_frequency" type="double" value="30.0" /-->
    </node>

    <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
        <param name="default_topic" value="/diffbot/mobile_base_controller/cmd_vel"/>
    </node>

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- AMCL -->
  <!-- Arguments -->
  <arg name="scan_topic"     default="diffbot/scan"/>
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>
  <arg name="use_map_topic"   default="true"/>
  <arg name="odom_frame_id"   default="/odom"/>
  <arg name="base_frame_id"   default="/base_footprint"/>
  <arg name="global_frame_id" default="/map"/>

  <!-- AMCL -->
  <node pkg="amcl" type="amcl" name="amcl">
  
    <param name="use_map_topic"             value="$(arg use_map_topic)"/>
    <param name="min_particles"             value="500"/>
    <param name="max_particles"             value="5000"/>
    <param name="kld_err"                   value="0.02"/>
    <param name="kld_z"                     value="0.99"/>
    <param name="update_min_d"              value="0.15"/>
    <param name="update_min_a"              value="0.15"/>
    <param name="resample_interval"         value="1"/>
    <param name="transform_tolerance"       value="0.1"/>
    <param name="recovery_alpha_slow"       value="0.00"/>
    <param name="recovery_alpha_fast"       value="0.00"/>
    <param name="initial_pose_x"            value="$(arg initial_pose_x)"/>
    <param name="initial_pose_y"            value="$(arg initial_pose_y)"/>
    <param name="initial_pose_a"            value="$(arg initial_pose_a)"/>
    <param name="gui_publish_rate"          value="50.0"/>

    <remap from="scan"                      to="$(arg scan_topic)"/>
    <param name="laser_max_range"           value="12"/>
    <param name="laser_max_beams"           value="30"/>
    <param name="laser_z_hit"               value="0.95"/>
    <param name="laser_z_short"             value="0.1"/>
    <param name="laser_z_max"               value="0.05"/>
    <param name="laser_z_rand"              value="0.05"/>
    <param name="laser_sigma_hit"           value="0.2"/>
    <param name="laser_lambda_short"        value="0.1"/>
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="laser_model_type"          value="likelihood_field"/>

    <!-- Which model to use, either "diff", "omni", "diff-corrected" or "omni-corrected". -->
    <!-- diff-corrected was introduced to fix a bug and keep tuned robot's using the old modle (diff) working. -->
    <!-- For the bug see http://wiki.ros.org/amcl#Parameters and https://github.com/ros-planning/navigation/issues/20 -->
    <param name="odom_model_type"           value="diff-corrected"/>
    <param name="odom_alpha1"               value="0.1"/>
    <param name="odom_alpha2"               value="0.1"/>
    <param name="odom_alpha3"               value="0.1"/>
    <param name="odom_alpha4"               value="0.1"/>
    <param name="odom_frame_id"             value="$(arg odom_frame_id)"/>
    <param name="base_frame_id"             value="$(arg base_frame_id)"/>
    <param name="global_frame_id"           value="$(arg global_frame_id)"/>
  </node>

  <!-- move_base -->
  <!-- Arguments -->
    <arg name="cmd_vel_topic" default="/diffbot/mobile_base_controller/cmd_vel" />
    <arg name="odom_topic" default="/diffbot/mobile_base_controller/odom" />
    
    
    

  <!-- move_base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <!-- base_local_planner parameter is set in the loaded parameter file depending on the local_planner argument -->
      <!--param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" /-->
      


      <rosparam file="$(find diffbot_navigation)/config/$(arg local_planner)_local_planner_params.yaml" command="load" />
      <rosparam file="$(find diffbot_navigation)/config/move_base_params.yaml" command="load" />
      <!-- global costmap params -->
      <rosparam file="$(find diffbot_navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find diffbot_navigation)/config/costmap_global_params.yaml" command="load" />
      <!-- local costmap params -->
      <rosparam file="$(find diffbot_navigation)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find diffbot_navigation)/config/costmap_local_params.yaml" command="load" />
      <!-- remappings -->
      <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
      <remap from="odom" to="$(arg odom_topic)"/>
      <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
    </node>
    

  <!-- Launch visualization in rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(arg rvizconfig)"/>
  </group>

</launch>
